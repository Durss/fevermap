package com.muxxu.fever.fevermap.components.form {	import com.nurun.structure.environnement.label.Label;	import com.muxxu.fever.fevermap.vo.AppMessage;	import com.muxxu.fever.fevermap.data.DataManager;	import com.muxxu.fever.graphics.InputSkinGraphic;	import com.nurun.components.form.Input;	import com.nurun.components.vo.Margin;	import flash.display.StageDisplayState;	import flash.events.FocusEvent;	/**	 * Displays a pre-skinned input.	 * 	 * @author  Francois	 */	public class FeverInput extends Input {										/* *********** *		 * CONSTRUCTOR *		 * *********** */		/**		 * Creates an instance of <code>FeverInput</code>.		 */		public function FeverInput(defaultLabel:String = "") {			super("input", new InputSkinGraphic(), defaultLabel, "inputDefault", new Margin(4, 2, 4, 2));			addEventListener(FocusEvent.FOCUS_IN, focusInHandler);		}						/* ***************** *		 * GETTERS / SETTERS *		 * ***************** */		public function set enabled(value:Boolean):void {			mouseEnabled = value;			mouseChildren = value;			textfield.tabEnabled = value;			alpha = value? 1 : .5;		}		/* ****** *		 * PUBLIC *		 * ****** */						/* ******* *		 * PRIVATE *		 * ******* */		/**		 * Called when input receives the focus		 */		private function focusInHandler(event:FocusEvent):void {			if(stage.displayState == StageDisplayState.FULL_SCREEN) {				stage.displayState = StageDisplayState.NORMAL;				stage.focus = this;				var message:AppMessage = new AppMessage();				message.dynamicPopulate(Label.getLabel("autoExitFullScreenHelp"), 1);				DataManager.getInstance().showMessage(message);			}		}			}}